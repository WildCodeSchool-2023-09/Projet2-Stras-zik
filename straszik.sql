-- MySQL Script generated by MySQL Workbench
-- Wed Oct 25 12:15:20 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema straszik
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema straszik
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `straszik` DEFAULT CHARACTER SET utf8 ;
USE `straszik` ;

-- -----------------------------------------------------
-- Table `straszik`.`song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`song` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NOT NULL,
  `time` FLOAT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`album` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NOT NULL,
  `year` INT NOT NULL,
  `song_id` INT NOT NULL,
  `image` BLOB NOT NULL,
  PRIMARY KEY (`id`, `song_id`),
  INDEX `fk_album_song_idx` (`song_id` ASC) VISIBLE,
  CONSTRAINT `fk_album_song`
    FOREIGN KEY (`song_id`)
    REFERENCES `straszik`.`song` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`concert`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`concert` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `location` VARCHAR(50) NOT NULL,
  `capacity` INT NOT NULL,
  `places_availables` INT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `status (admin/client)` INT NOT NULL,
  `adresse` VARCHAR(100) NOT NULL,
  `code_postal` INT NOT NULL,
  `ville` VARCHAR(45) NOT NULL,
  `is_Newletters` TINYINT(0) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`ticket` (
  `concert_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`concert_id`, `user_id`),
  INDEX `fk_concert_has_user_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_concert_has_user_concert1_idx` (`concert_id` ASC) VISIBLE,
  CONSTRAINT `fk_concert_has_user_concert1`
    FOREIGN KEY (`concert_id`)
    REFERENCES `straszik`.`concert` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_concert_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `straszik`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`prospect`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`prospect` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`newletter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`newletter` (
  `prospect_id` INT NOT NULL,
  `concert_id` INT NOT NULL,
  `description` LONGTEXT NOT NULL,
  PRIMARY KEY (`prospect_id`, `concert_id`),
  INDEX `fk_prospect_has_concert_concert1_idx` (`concert_id` ASC) VISIBLE,
  INDEX `fk_prospect_has_concert_prospect1_idx` (`prospect_id` ASC) VISIBLE,
  CONSTRAINT `fk_prospect_has_concert_prospect1`
    FOREIGN KEY (`prospect_id`)
    REFERENCES `straszik`.`prospect` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_prospect_has_concert_concert1`
    FOREIGN KEY (`concert_id`)
    REFERENCES `straszik`.`concert` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`goodie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`goodie` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `price` INT NOT NULL,
  `designation` VARCHAR(200) NOT NULL,
  `picture` BLOB(200) NOT NULL,
  `description` LONGTEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `price_UNIQUE` (`price` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`order` (
  `goodie_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `quantite` INT NOT NULL,
  `total_price` INT NOT NULL,
  PRIMARY KEY (`goodie_id`, `user_id`),
  INDEX `fk_goodie_has_user_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_goodie_has_user_goodie1_idx` (`goodie_id` ASC) VISIBLE,
  CONSTRAINT `fk_goodie_has_user_goodie1`
    FOREIGN KEY (`goodie_id`)
    REFERENCES `straszik`.`goodie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_goodie_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `straszik`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`user_has_newletter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`user_has_newletter` (
  `user_id` INT NOT NULL,
  `newletter_prospect_id` INT NOT NULL,
  `newletter_concert_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `newletter_prospect_id`, `newletter_concert_id`),
  INDEX `fk_user_has_newletter_newletter1_idx` (`newletter_prospect_id` ASC, `newletter_concert_id` ASC) VISIBLE,
  INDEX `fk_user_has_newletter_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_newletter_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `straszik`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_newletter_newletter1`
    FOREIGN KEY (`newletter_prospect_id` , `newletter_concert_id`)
    REFERENCES `straszik`.`newletter` (`prospect_id` , `concert_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `straszik`.`actuality`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `straszik`.`actuality` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `image` BLOB NOT NULL,
  `description` LONGTEXT NOT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`id`, `category_id`),
  INDEX `fk_actuality_categorie1_idx` (`category_id` ASC) VISIBLE,
  CONSTRAINT `fk_actuality_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `straszik`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
